/*----- PROTECTED REGION ID(VideoCaptureDSStateMachine.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        VideoCaptureDSStateMachine.cpp
//
// description : State machine file for the VideoCaptureDS class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <VideoCaptureDS.h>

/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::VideoCaptureDSStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  
//  FAULT   |  


namespace VideoCaptureDS_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_Jpeg_allowed()
 *	Description : Execution allowed for Jpeg attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_Jpeg_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Jpeg attribute in read access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::JpegStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::JpegStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_ContourInfo_allowed()
 *	Description : Execution allowed for ContourInfo attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_ContourInfo_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for ContourInfo attribute in read access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::ContourInfoStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::ContourInfoStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_Threshold_allowed()
 *	Description : Execution allowed for Threshold attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_Threshold_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Threshold attribute in Write access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::ThresholdStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::ThresholdStateAllowed_WRITE

	//	Not any excluded states for Threshold attribute in read access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::ThresholdStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::ThresholdStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_Ruler_allowed()
 *	Description : Execution allowed for Ruler attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_Ruler_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Ruler attribute in Write access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::RulerStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::RulerStateAllowed_WRITE

	//	Not any excluded states for Ruler attribute in read access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::RulerStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::RulerStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_MinContourArea_allowed()
 *	Description : Execution allowed for MinContourArea attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_MinContourArea_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for MinContourArea attribute in Write access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::MinContourAreaStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::MinContourAreaStateAllowed_WRITE

	//	Not any excluded states for MinContourArea attribute in read access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::MinContourAreaStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::MinContourAreaStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_Frame_allowed()
 *	Description : Execution allowed for Frame attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_Frame_allowed(TANGO_UNUSED(Tango::AttReqType type))
{

	//	Not any excluded states for Frame attribute in read access.
	/*----- PROTECTED REGION ID(VideoCaptureDS::FrameStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::FrameStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_Capture_allowed()
 *	Description : Execution allowed for Capture attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_Capture_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Capture command.
	/*----- PROTECTED REGION ID(VideoCaptureDS::CaptureStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::CaptureStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : VideoCaptureDS::is_Reconnect_allowed()
 *	Description : Execution allowed for Reconnect attribute
 */
//--------------------------------------------------------
bool VideoCaptureDS::is_Reconnect_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Reconnect command.
	/*----- PROTECTED REGION ID(VideoCaptureDS::ReconnectStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::ReconnectStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(VideoCaptureDS::VideoCaptureDSStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	VideoCaptureDS::VideoCaptureDSStateAllowed.AdditionalMethods

}	//	End of namespace
